/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.2.10 public/models/64ce2129cbd7d40ae6d6d010.glb -o src/components/Avatar.jsx -r public 
*/

import React, { useEffect, useMemo, useRef, useState } from 'react'
import { useAnimations, useFBX, useGLTF } from '@react-three/drei'
import {useControls} from 'leva'
import { useFrame } from '@react-three/fiber';
export function Avatar(props) {

  const {playAudio,script} =useControls({
    playAudio:false,
    script:{
      value:"welcome",
      options:["welcome"]
    }
     
  })
  // for audio to play 
  const audio = useMemo(()=> new Audio(`/audios/${script}.mp3`),[script]);
  useFrame(() => {
    
    if (audio.paused || audio.ended) {
      setAnimation("Idle");
      return;
    }
  else{
    setAnimation("Greeting")
  }}
  )

  useEffect(()=>{
    if(playAudio){
      audio.play();
    }else{
      audio.pause();
    }
  }, [playAudio])

  const { nodes, materials } = useGLTF('/models/64ce2129cbd7d40ae6d6d010.glb')
  
  const{animations:idleAnimation} =useFBX("/animations/Breathing Idle.fbx");
  const{animations:greetingAnimation} = useFBX("/animations/Standing Greeting.fbx");
  
  idleAnimation[0].name="Idle";
  greetingAnimation[0].name = "Greeting";
  
  const [animation,setAnimation] =useState("Idle")

  const group =useRef()
  const {actions}=useAnimations(
    [idleAnimation[0],greetingAnimation[0]],
  group
  );

  useEffect(()=>{
    actions[animation].reset().fadeIn(0.5).play();
    return () => actions[animation].fadeOut(0.5)
  }, [animation])


  return (
    <group {...props} dispose={null} ref={group}>
      <primitive object={nodes.Hips} />
      <skinnedMesh geometry={nodes.Wolf3D_Body.geometry} material={materials.Wolf3D_Body} skeleton={nodes.Wolf3D_Body.skeleton} />
      <skinnedMesh geometry={nodes.Wolf3D_Outfit_Bottom.geometry} material={materials.Wolf3D_Outfit_Bottom} skeleton={nodes.Wolf3D_Outfit_Bottom.skeleton} />
      <skinnedMesh geometry={nodes.Wolf3D_Outfit_Footwear.geometry} material={materials.Wolf3D_Outfit_Footwear} skeleton={nodes.Wolf3D_Outfit_Footwear.skeleton} />
      <skinnedMesh geometry={nodes.Wolf3D_Outfit_Top.geometry} material={materials.Wolf3D_Outfit_Top} skeleton={nodes.Wolf3D_Outfit_Top.skeleton} />
      <skinnedMesh geometry={nodes.Wolf3D_Hair.geometry} material={materials.Wolf3D_Hair} skeleton={nodes.Wolf3D_Hair.skeleton} />
      <skinnedMesh name="EyeLeft" geometry={nodes.EyeLeft.geometry} material={materials.Wolf3D_Eye} skeleton={nodes.EyeLeft.skeleton} morphTargetDictionary={nodes.EyeLeft.morphTargetDictionary} morphTargetInfluences={nodes.EyeLeft.morphTargetInfluences} />
      <skinnedMesh name="EyeRight" geometry={nodes.EyeRight.geometry} material={materials.Wolf3D_Eye} skeleton={nodes.EyeRight.skeleton} morphTargetDictionary={nodes.EyeRight.morphTargetDictionary} morphTargetInfluences={nodes.EyeRight.morphTargetInfluences} />
      <skinnedMesh name="Wolf3D_Head" geometry={nodes.Wolf3D_Head.geometry} material={materials.Wolf3D_Skin} skeleton={nodes.Wolf3D_Head.skeleton} morphTargetDictionary={nodes.Wolf3D_Head.morphTargetDictionary} morphTargetInfluences={nodes.Wolf3D_Head.morphTargetInfluences} />
      <skinnedMesh name="Wolf3D_Teeth" geometry={nodes.Wolf3D_Teeth.geometry} material={materials.Wolf3D_Teeth} skeleton={nodes.Wolf3D_Teeth.skeleton} morphTargetDictionary={nodes.Wolf3D_Teeth.morphTargetDictionary} morphTargetInfluences={nodes.Wolf3D_Teeth.morphTargetInfluences} />
    </group>
  )
}

useGLTF.preload('/models/64ce2129cbd7d40ae6d6d010.glb')
